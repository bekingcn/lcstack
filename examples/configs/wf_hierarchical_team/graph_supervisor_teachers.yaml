name: TeachersTeam
# reset workflow data for re-entering the workflow
reset_state: true
input_mapping:
  messages: messages  # from upstream team output
schema:
- name: messages  # state field name
  map_to: messages  # input name, convert to supervisor's input (Messages)
  field_type: messages
  default: []
  operator: add
  required: true
- name: next # state field name
  map_to: next  # supervisor's output name
  default: ""
  field_type: str
- name: question  # state field name
  map_to: question  # as workers' input
  field_type: str
  default: let's go on!
- name: output  
  field_type: str
  operator: add
  default: ''

vertices:
- name: supervisor
  next: branch_0
  agent: '{{ teachers_supervisor_agent }}'
  #   config: 'wf_hierarchical_team/graph_agents.yaml'
  #   name: teachers_supervisor_agent
  output_mapping:
    next: next  # output name
- name: branch_0
  # maybe other or FINISH
  default: __end__
  branchs:
  - conditions:
    - property: next
      value: fruit
    next: fruit_chain
    # setters:
    #   property: question  # state field name to set
    #   value: what's your favorite dog?   # state field name to get
  - conditions:
    - property: next
      value: vegetable
    next: vegetable_chain
    # setters:
      # property: question
      # value: $query
  - conditions:
    - property: next
      value: animal
    next: animal_chain
- name: fruit_chain
  next: supervisor
  agent: '{{ llm_chain_messages_teacher }}'
  #   config: 'wf_hierarchical_team/graph_agents.yaml'
  #   name: llm_chain_messages_teacher
  output_mapping:
    messages: output    # state field name: output field name
    output: output
- name: vegetable_chain
  next: supervisor
  agent: '{{ llm_chain_messages_teacher }}'
  #   config: 'wf_hierarchical_team/graph_agents.yaml'
  #   name: llm_chain_messages_teacher
  output_mapping:
    messages: output
    output: output
- name: animal_chain
  next: supervisor
  agent: '{{ llm_chain_messages_teacher }}'
  #   config: 'wf_hierarchical_team/graph_agents.yaml'
  #   name: llm_chain_messages_teacher
  output_mapping:
    messages: output    # state field name: output field name
    output: output

# python cli.py -c graph_supervisor_as_agent.yaml -i graph_supervisor -q "tell me three jokes, one about dog and two about apple, but only one at a time." -I question